#!/usr/bin/env bash

# This file is part of CO𝘕CEPT, the cosmological 𝘕-body code in Python.
# Copyright © 2015–2018 Jeppe Mosgaard Dakin.
#
# CO𝘕CEPT is free software: You can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# CO𝘕CEPT is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with CO𝘕CEPT. If not, see http://www.gnu.org/licenses/
#
# The author of CO𝘕CEPT can be contacted at dakin(at)phys.au.dk
# The latest version of CO𝘕CEPT is available at
# https://github.com/jmd-dk/concept/



# This script performs a vacuum correction test on a fluid,
# meaning testing if the fluid ever gets negative density values.
# The fluid density is initially homogeneous in the y- and
# z-directions but forms a slightly offset sine curve (one period) in
# the x-direction. The velocity is initially zero, except around the
# bottom of the sine curve, where it diverges, producing a region of
# very low density.

# Absolute path and name of the directory of this file
this_dir="$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")"
this_test="$(basename "${this_dir}")"

# Set up error trapping
ctrl_c(){
    trap : 0
    exit 2
}
abort(){
    exit_code=$?
    colorprint "An error occurred during ${this_test} test!" "red"
    exit ${exit_code}
}
trap 'ctrl_c' SIGINT
trap 'abort' EXIT
set -e

# Cleanup from last test run
"${this_dir}/clean"

# Get the φ_gridsize parameter and store it in the variable 'gridsize'
gridsize=$(get_param "φ_gridsize")

# Generate ICs
"${concept}" -n 1 -p "${this_dir}/params" -m "${this_dir}/generate_IC.py" --pure-python --local

# Run the CO𝘕CEPT code on the particle ICs
"${concept}" -n 1 -p "${this_dir}/params" --local

# Play the 2D terminal renders in the log file as an animation
"${concept}" -u play -f 5

# Move particle snapshots to a new directory
mkdir "${this_dir}/output/particles"
mv "${this_dir}/output/snapshot"* "${this_dir}/output/particles/"

# Function for converting particle snapshots to fluid snapshots
particles2fluid(){
    "${concept}" --local -u convert "${1}"             \
        "control particles.species  = matter fluid"    \
        "control particles.gridsize = ${gridsize}"     \
        "control particles.name     = converted fluid"
}

# Convert particle ICs to fluid ICs
particles2fluid "${this_dir}/IC.hdf5"
mv "${this_dir}/IC.hdf5" "${this_dir}/IC_particles.hdf5"
mv "${this_dir}/IC_converted.hdf5" "${this_dir}/IC.hdf5"

# Run the CO𝘕CEPT code on the fluid ICs
"${concept}" -n 1 -p "${this_dir}/params" --local

# Play the 2D terminal renders in the log file as an animation
"${concept}" -u play -f 5

# Move fluid snapshots to a new directory
mkdir "${this_dir}/output/fluid"
mv "${this_dir}/output/snapshot"* "${this_dir}/output/fluid/"

# Convert particle snapshots to fluid snapshots
particles2fluid "${this_dir}/output/particles"

# Analyze the output snapshots
"${concept}" -n 1 -p "${this_dir}/params" -m "${this_dir}/analyze.py" --pure-python --local

# Test ran successfully. Deactivate traps.
trap : 0
